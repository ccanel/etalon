#!/usr/bin/env python

import argparse
import json
import os
from os import path

def main():
    # Parse command line arguments.
    parser = argparse.ArgumentParser(
        description="Parse log files generated by change_delay.py")
    parser.add_argument(
        "--exp-dir", help="The experiment output directory.", required=True,
        type=str)
    parser.add_argument(
        "--out-dir", help="The output directory for this script.",
        required=True, type=str)
    args = parser.parse_args()
    out_fln = None
    exp_dir = args.exp_dir

    # Extract duration, bytes sent, and data rate from each results JSON file.
    data = []
    for fln in os.listdir(exp_dir):
        if fln.endswith(".json"):
            # Parse experiment parameters.
            toks = fln[:-5].split("-")
            ts_s = int(toks[0])
            delay_us = int(toks[-5])
            nw_switch_us = int(toks[-4])
            queue_cap = int(toks[-3])
            in_advance_us = int(toks[7])
            par = int(toks[-2])
            # Create output filename.
            if out_fln is None:
                out_fln = "{}.csv".format(ts_s)
            # Record results.
            with open(path.join(exp_dir, fln), "r") as fil:
                jsn = json.load(fil)
            res = jsn[0]["output"]["end"]["sum_received"]
            data.append((ts_s, delay_us, nw_switch_us, queue_cap, in_advance_us,
                         par, float(res["seconds"]),
                         int(res["bytes"]), float(res["bits_per_second"])))

    # Create output CSV file.
    with open(path.join(args.out_dir, out_fln), "w") as fil:
        fil.write(("experiment id,"
                   "circuit base delay (us),"
                   "network switch period (us),"
                   "ToR queue base capacity (1500 byte packets),"
                   "ToR prebuffering duration (us),"
                   "parallel flows,"
                   "flow duration (s),"
                   "bytes received,"
                   "flow rate (bps)\n"))
        for row in data:
            fil.write("{}\n".format(",".join([str(val) for val in row])))


if __name__ == "__main__":
    main()
